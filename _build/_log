### Starting build.
# Target: spmain.ml.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:ml, file:spmain.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules spmain.ml > spmain.ml.depends # cached
# Target: spmain.mli.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:mli, file:spmain.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules spmain.mli > spmain.mli.depends # cached
# Target: processresults.mli.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:mli, file:processresults.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules processresults.mli > processresults.mli.depends # cached
# Target: processresults.cmi, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), byte, compile, extension:mli, file:processresults.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o processresults.cmi processresults.mli # cached
# Target: spmain.cmi, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), byte, compile, extension:mli, file:spmain.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o spmain.cmi spmain.mli # cached
# Target: commands.ml.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:ml, file:commands.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules commands.ml > commands.ml.depends # cached
# Target: commands.mli.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:mli, file:commands.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules commands.mli > commands.mli.depends # cached
# Target: commands.cmi, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), byte, compile, extension:mli, file:commands.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o commands.cmi commands.mli # cached
# Target: coqstuff.ml.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:ml, file:coqstuff.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules coqstuff.ml > coqstuff.ml.depends # cached
# Target: coqstuff.mli.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:mli, file:coqstuff.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules coqstuff.mli > coqstuff.mli.depends # cached
# Target: coqstuff.cmi, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), byte, compile, extension:mli, file:coqstuff.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o coqstuff.cmi coqstuff.mli # cached
# Target: processinputs.ml.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:ml, file:processinputs.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules processinputs.ml > processinputs.ml.depends # cached
# Target: processinputs.mli.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:mli, file:processinputs.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules processinputs.mli > processinputs.mli.depends # cached
# Target: processinputs.cmi, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), byte, compile, extension:mli, file:processinputs.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o processinputs.cmi processinputs.mli # cached
# Target: processinputs.cmx, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), compile, extension:cmx, extension:ml, file:processinputs.cmx, file:processinputs.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o processinputs.cmx processinputs.ml # cached
# Target: coqstuff.cmx, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), compile, extension:cmx, extension:ml, file:coqstuff.cmx, file:coqstuff.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o coqstuff.cmx coqstuff.ml # cached
# Target: commands.cmx, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), compile, extension:cmx, extension:ml, file:commands.cmx, file:commands.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o commands.cmx commands.ml # cached
# Target: latexstuff.ml.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:ml, file:latexstuff.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules latexstuff.ml > latexstuff.ml.depends
+ ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules latexstuff.ml > latexstuff.ml.depends
File "latexstuff.ml", line 33, characters 61-63:
Warning 14: illegal backslash escape in string.
File "latexstuff.ml", line 33, characters 68-70:
Warning 14: illegal backslash escape in string.
# Target: latexstuff.mli.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:mli, file:latexstuff.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules latexstuff.mli > latexstuff.mli.depends # cached
# Target: treestuff.mli.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:mli, file:treestuff.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules treestuff.mli > treestuff.mli.depends # cached
# Target: treestuff.cmi, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), byte, compile, extension:mli, file:treestuff.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o treestuff.cmi treestuff.mli # cached
# Target: latexstuff.cmi, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), byte, compile, extension:mli, file:latexstuff.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o latexstuff.cmi latexstuff.mli # cached
# Target: processresults.ml.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:ml, file:processresults.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules processresults.ml > processresults.ml.depends # cached
# Target: processresults.cmx, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), compile, extension:cmx, extension:ml, file:processresults.cmx, file:processresults.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o processresults.cmx processresults.ml # cached
# Target: treestuff.ml.depends, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), extension:ml, file:treestuff.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -modules treestuff.ml > treestuff.ml.depends # cached
# Target: treestuff.cmx, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), compile, extension:cmx, extension:ml, file:treestuff.cmx, file:treestuff.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o treestuff.cmx treestuff.ml # cached
# Target: latexstuff.cmx, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), compile, extension:cmx, extension:ml, file:latexstuff.cmx, file:latexstuff.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o latexstuff.cmx latexstuff.ml
+ ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o latexstuff.cmx latexstuff.ml
File "latexstuff.ml", line 33, characters 61-63:
Warning 14: illegal backslash escape in string.
File "latexstuff.ml", line 33, characters 68-70:
Warning 14: illegal backslash escape in string.
File "latexstuff.ml", line 9, characters 4-8:
Warning 40: LEAF was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 10, characters 3-7:
Warning 40: TREE was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 9, characters 16-26:
Warning 40: conclusion was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 10, characters 20-30:
Warning 40: conclusion was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 13, characters 4-8:
Warning 40: LEAF was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 14, characters 3-7:
Warning 40: TREE was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 13, characters 16-20:
Warning 40: hyps was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 14, characters 20-24:
Warning 40: hyps was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 17, characters 4-8:
Warning 40: LEAF was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 18, characters 3-7:
Warning 40: TREE was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 17, characters 14-59:
Warning 40: this record of type Processresults.statement contains fields that are 
not visible in the current scope: name content.
They will not be selected if the type becomes unknown.
File "latexstuff.ml", line 21, characters 24-28:
Warning 40: hyps was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 26, characters 4-8:
Warning 40: LEAF was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 27, characters 3-7:
Warning 40: TREE was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 26, characters 15-60:
Warning 40: this record of type Processresults.statement contains fields that are 
not visible in the current scope: name content.
They will not be selected if the type becomes unknown.
File "latexstuff.ml", line 28, characters 20-24:
Warning 40: hyps was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 80, characters 4-8:
Warning 40: LEAF was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 85, characters 3-7:
Warning 40: TREE was selected from type Treestuff.tree.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 83, characters 16-30:
Warning 40: leaving_tactic was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 83, characters 45-59:
Warning 40: leaving_tactic was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 86, characters 19-33:
Warning 40: leaving_tactic was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "latexstuff.ml", line 94, characters 57-63:
Warning 40: values was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
# Target: spmain.cmx, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), compile, extension:cmx, extension:ml, file:spmain.cmx, file:spmain.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o spmain.cmx spmain.ml
+ ocamlfind ocamlopt -c -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre -o spmain.cmx spmain.ml
File "spmain.ml", line 160, characters 48-50:
Warning 14: illegal backslash escape in string.
File "spmain.ml", line 160, characters 57-59:
Warning 14: illegal backslash escape in string.
File "spmain.ml", line 160, characters 70-72:
Warning 14: illegal backslash escape in string.
File "spmain.ml", line 160, characters 77-79:
Warning 14: illegal backslash escape in string.
File "spmain.ml", line 170, characters 56-58:
Warning 14: illegal backslash escape in string.
File "spmain.ml", line 182, characters 60-62:
Warning 14: illegal backslash escape in string.
File "spmain.ml", line 36, characters 6-313:
Warning 10: this expression should have type unit.
File "spmain.ml", line 45, characters 6-65:
Warning 10: this expression should have type unit.
File "spmain.ml", line 53, characters 2-23:
Warning 5: this function application is partial,
maybe some arguments are missing.
File "spmain.ml", line 62, characters 6-78:
Warning 10: this expression should have type unit.
File "spmain.ml", line 59, characters 0-297:
Warning 10: this expression should have type unit.
File "spmain.ml", line 76, characters 6-79:
Warning 10: this expression should have type unit.
File "spmain.ml", line 73, characters 0-222:
Warning 10: this expression should have type unit.
File "spmain.ml", line 86, characters 6-79:
Warning 10: this expression should have type unit.
File "spmain.ml", line 83, characters 0-222:
Warning 10: this expression should have type unit.
File "spmain.ml", line 161, characters 41-103:
Warning 40: this record of type Processresults.goal contains fields that are 
not visible in the current scope: hyps.
They will not be selected if the type becomes unknown.
File "spmain.ml", line 161, characters 79-101:
Warning 40: this record of type Processresults.statement contains fields that are 
not visible in the current scope: name content.
They will not be selected if the type becomes unknown.
File "spmain.ml", line 172, characters 50-112:
Warning 40: this record of type Processresults.goal contains fields that are 
not visible in the current scope: hyps.
They will not be selected if the type becomes unknown.
File "spmain.ml", line 172, characters 88-110:
Warning 40: this record of type Processresults.statement contains fields that are 
not visible in the current scope: name content.
They will not be selected if the type becomes unknown.
File "spmain.ml", line 173, characters 111-115:
Warning 40: hyps was selected from type Processresults.goal.
It is not visible in the current scope, and will not 
be selected if the type becomes unknown.
File "spmain.ml", line 173, characters 13-125:
Warning 10: this expression should have type unit.
File "spmain.ml", line 211, characters 19-79:
Warning 10: this expression should have type unit.
File "spmain.ml", line 304, characters 6-67:
Warning 10: this expression should have type unit.
File "spmain.ml", line 307, characters 6-65:
Warning 10: this expression should have type unit.
File "spmain.ml", line 322, characters 6-329:
Warning 10: this expression should have type unit.
File "spmain.ml", line 333, characters 6-65:
Warning 10: this expression should have type unit.
File "spmain.ml", line 352, characters 6-736:
Warning 10: this expression should have type unit.
File "spmain.ml", line 371, characters 6-65:
Warning 10: this expression should have type unit.
File "spmain.ml", line 389, characters 2-277:
Warning 10: this expression should have type unit.
File "spmain.ml", line 404, characters 49-89:
Warning 40: this record of type GToolbox.shortcut_specification contains fields that are 
not visible in the current scope: name keys message.
They will not be selected if the type becomes unknown.
File "spmain.ml", line 417, characters 49-89:
Warning 40: this record of type GToolbox.shortcut_specification contains fields that are 
not visible in the current scope: name keys message.
They will not be selected if the type becomes unknown.
File "spmain.ml", line 470, characters 8-60:
Warning 10: this expression should have type unit.
File "spmain.ml", line 477, characters 10-62:
Warning 10: this expression should have type unit.
File "spmain.ml", line 489, characters 14-66:
Warning 10: this expression should have type unit.
File "spmain.ml", line 479, characters 10-431:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "spmain.ml", line 463, characters 6-960:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "spmain.ml", line 502, characters 6-833:
Warning 10: this expression should have type unit.
File "spmain.ml", line 33, characters 10-16:
Warning 26: unused variable locale.
File "spmain.ml", line 203, characters 23-30:
Warning 26: unused variable oldmain.
File "spmain.ml", line 326, characters 14-15:
Warning 26: unused variable d.
File "spmain.ml", line 409, characters 14-16:
Warning 26: unused variable xx.
File "spmain.ml", line 428, characters 10-11:
Warning 26: unused variable m.
File "spmain.ml", line 491, characters 9-10:
Warning 11: this match case is unused.
# Target: spmain.native, tags: { package(lablgtk2), package(lambdasoup), package(pcre), package(sexplib), package(str), dont_link_with, extension:native, file:spmain.native, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -package str -package lambdasoup -package lablgtk2 -package sexplib -package pcre processinputs.cmx coqstuff.cmx commands.cmx processresults.cmx treestuff.cmx latexstuff.cmx spmain.cmx -o spmain.native
# Compilation successful.
